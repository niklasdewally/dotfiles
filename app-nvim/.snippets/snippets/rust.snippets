snippet docattr
	#[doc(${1:hidden})]

autosnippet dochidden
	#[doc(hidden)]

autosnippet #dh
	#[doc(hidden)]


autosnippet nonexhaustive
	#[non_exhaustive]

autosnippet #ne
	#[non_exhaustive]

snippet parser_expr2 parser_expression() fragment for binary operators (conjure-oxide)
	(
		"$1",
		Box::new(Expression::$2) as Box<dyn Fn(_,_,_) -> _>,
	),

snippet parser_exprvec parser_expression() fragment for vec operators (conjure-oxide)
	(
		"$1",
		Box::new(Expression::$2) as Box<dyn Fn(_, _) -> _>,
	),

autosnippet !rr rule
	#[register_rule(("${3:Minion}", ${2:4400}))]
	fn ${1:rule_name}(expr: &Expr, m: &Model) -> ApplicationResult {
		$4
		${5:todo!()}
	}

autosnippet !rna rule not applicable
	return Err(RuleNotApplicable);

autosnippet td todo!()
	todo!()

autosnippet unlist
	let ${1:exprs} = ${2:inner}.unwrap_list().ok_or(RuleNotApplicable)?;

