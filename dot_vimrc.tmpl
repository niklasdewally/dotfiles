" Personal self-installing vim config using vim-plug.
"
"INSTALLATION:
" Rename this file .vimrc and place it in your home folder.
"
" On first run, the vim-plug plugin manager and plugins will be automatically
" installed into ~/.vim.
" 
" (if installing on a STACS machine, you might need to mkdir
" /cs/home/<username>/.vim before doing this.)
"
" Written 19/11/21 by nd60
" (updated 01/12/22)

set nocompatible " be vIM not vi!

" NOTE: <leader> refers to <Space> in my case, but this can be changed below!
let mapleader=" "

""""""""""""""""""""""""""""""""""""
" Autoinstall vim-plug and plugins "
""""""""""""""""""""""""""""""""""""
" Copied from https://github.com/junegunn/vim-plug/wiki/tips#automatic-installation
" Best not to touch this!

" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif


"""""""""""
" Plugins "
"""""""""""
" See: https://github.com/junegunn/vim-plug
call plug#begin('~/.vim/plugged')
Plug 'morhetz/gruvbox' " my preferred colorscheme :)
Plug 'vimsence/vimsence' " Discord Rich Presence
Plug 'preservim/nerdtree' " File browsing
Plug 'junegunn/fzf' " Use fzf within vim (REQUIRES fzf installed on the system)
Plug 'jpalardy/vim-slime' "REPL integration (see later section in this file)

" Language Plugins:
"
" Markdown 
" Plugin 'gabrielelana/vim-markdown'
Plug 'vim-pandoc/vim-pandoc'
Plug 'vim-pandoc/vim-pandoc-syntax'

" Latex
Plug 'lervag/vimtex'

{{ if eq .islab false}}
" Racket / Scheme
" See: https://stackoverflow.com/q/5352997
" See: https://docs.racket-lang.org/guide/Vim.html
Plug 'benknoble/vim-racket' " basic language plugin
Plug 'kien/rainbow_parentheses.vim'
" use this one for emacs-paredit like functionality (auto close brackets, plus
" some other vim keybindings!) - it also supports REPL stuff, but not for
" racket!
Plug 'kovisoft/slimv'
{{end}}

" HTML / CSS
Plug 'gregsexton/matchtag' " match HTML tags

" Readability Plugins:
Plug 'nathanaelkane/vim-indent-guides'
Plug 'vim-airline/vim-airline' " nice bottom bar
Plug 'vim-airline/vim-airline-themes'
Plug 'airblade/vim-gitgutter' " show git diff info in airline

" Haskell
Plug 'neovimhaskell/haskell-vim'


call plug#end()

"""""""""""""""""
" Line Numbers  "
"""""""""""""""""
set ruler
"set nu 
" Use this if you want the current line to show the line number, but the
" others to show distance from the current line - this is useful for vim
" commands (eg 10j)!
set nu rnu

"""""""""""""""""
" Better Splits "
"""""""""""""""""
" Keybindings (note <leader>=<Space>)
" create new splits
nnoremap <leader>v :vne
nnoremap <leader>s :split
" move between splits
nnoremap <leader>j <C-w>j
" gitgutter causes a conflict - disable keybindings
let g:gitgutter_map_keys = 0
nnoremap <leader>h <C-w>h
nnoremap <leader>k <C-w>k
nnoremap <leader>l <C-w>l
" move around splits (to specified side of screen)
nnoremap <leader>J <C-w>J
nnoremap <leader>H <C-w>H
nnoremap <leader>K <C-w>K
nnoremap <leader>L <C-w>L
" resize vsplits
nnoremap <leader>< <c-w><
nnoremap <leader>> <c-w>>
"""""""""""""""""""""""""""""""""""""""
" Indentation and Syntax Highlighting "
"""""""""""""""""""""""""""""""""""""""
" Uses vims default filetype settings - providing indentation and/or plugins.
" You can also make your own filetype plugins - see the docs and google for
" more deatails.
"
" See: :h filetype.

" Personal settings per filetype can be put in .vim/after/ftplugin/FILETYPE.vim
" Write these like any vimrc file, but use setlocal instead of set.
"
" See: :h filetype-plugins

syntax on
filetype plugin indent on

" Default, language agonostic tab/spaces indentation rules
" For most languages, this is personal preference, so not built into vim.
" (however, python uses pep8 defaults)

set autoindent " When indented, stay indented
set shiftwidth=4 " Number of characters to indent by
set tabstop=4 " Number of characters for tab key
set expandtab " Pressing tab makes 4 spaces.

" Bring mac inline with linux defaults with backspaces
set bs=indent,eol,start

"""""""""""""""""
" Colour-scheme "
"""""""""""""""""
" See the documentation for your preferred color-scheme for what to put here!
" for gruvbox (my scheme of choice), see: https://github.com/morhetz/gruvbox

set bg=dark " options: dark | light
colorscheme gruvbox
let g:airline_theme='gruvbox'

"""""""""""""""
" No crutches "
"""""""""""""""
" Disable newb crutches (arrow keys, page up page down)

noremap <Left> <Nop>
noremap <Right> <Nop>
noremap <Up> <Nop>
noremap <Down> <Nop>

noremap <kPageUp> <Nop>
noremap <kPageDown> <Nop>

""""""""""""""""""""""""
" File Mode (Leader-F) "
""""""""""""""""""""""""
nnoremap <leader>ff :NERDTreeFocus<CR>  "Focus Files
nnoremap <leader>ft :NERDTreeToggle<CR> "Toggle Files 
" https://sourcediving.com/better-fuzzy-finding-in-vim-2f1e8597b3b9
nnoremap <leader>fs :FZF<CR> "Search Files

""""""""""""""""""""""""""""
" REPL Support (vim-slime) "
""""""""""""""""""""""""""""
" See: https://github.com/jpalardy/vim-slime
" This plugin allows Ctrl-c c (holding ctrl) to send the selected code over to
" a REPL (eg. racket, R) in another tmux pane
"
" Configuration for tmux (see README):
let g:slime_target = "tmux"
let g:slime_default_config = {"socket_name": "default", "target_pane": "{last}"}

""""""""""""""""""""
" Man Page Support "
""""""""""""""""""""
" View manpages in vim by typing :Man
" See: https://vim.fandom.com/wiki/View_man_pages_in_Vim
runtime ftplugin/man.vim

set exrc " load local macros from current project directory's vimrc (make this using :mkv)
set secure

""""""""""""""""""
"Pandoc Markdown "
""""""""""""""""""

let g:pandoc#syntax#codeblocks#embed#langs = ["html","c","css","java","bash=sh"]


